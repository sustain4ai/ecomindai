name: Build and/or publish Docker image to Dockerhub

on:
    push:
        branches: ["main"]
    pull_request:
    release:
        types: [created]

jobs:
    # Job to analyze the code and test the build on the PR (without publishing any image)
    test-build:
        if: github.event_name == 'pull_request'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Test Docker build
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./Dockerfile
                  push: false
                  # Utilise le cache GitHub Actions pour accélérer les builds Docker en réutilisant les couches précédentes
                  cache-from: type=gha
                  # Sauvegarde toutes les couches générées pendant le build dans le cache GitHub Actions pour les réutilisations futures
                  cache-to: type=gha,mode=max

            - name: Run Linter
              run: |
                  pip install pylint
                  pylint src/

            - name: Check Dependencies for Vulnerabilities
              run: |
                  pip install pip-audit
                  pip-audit

            - name: Check Code Formatting
              run: |
                  pip install black
                  black --check src/

    # Job to publish the image (only when pushing to main)
    build-and-publish:
        if: github.event_name == 'push'
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: sustain4raise/ecomindai
                  tags: type=ref,event=branch

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  # Utilise le cache GitHub Actions pour accélérer les builds Docker en réutilisant les couches précédentes
                  cache-from: type=gha
                  # Sauvegarde toutes les couches générées pendant le build dans le cache GitHub Actions pour les réutilisations futures
                  cache-to: type=gha,mode=max

    # Job to promote the image (only when creating releases)
    promote:
        if: github.event_name == 'release'
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Push image to dockerhub
              run: |
                  docker buildx imagetools create \
                    --tag sustain4raise/ecomindai:latest \
                    --tag sustain4raise/ecomindai:${{ github.ref }} \
                    sustain4raise/ecomindai:main
